// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Not(in=reset, out=NotR);
    Not(in=load, out=NotL);
    Not(in=inc, out=NotI);
    
    Or(a=load, b=reset, out=sel1);
    Or(a=inc, b=load, out=sel0temp);
    And(a=NotR, b=sel0temp, out=sel0);
    

    Or(a=load, b=reset, out=rLoadtemp);
    Or(a=rLoadtemp, b=inc, out=Rload);
    
    // And(a=NotR, b=load, out=); /* in case */
    // And(a=true, b=reset, out=); /* 0 case */
    // And(a=NotL, b=NotR, out=ANDI);
    // And(a=ANDI, b=inc, out=); /* Out + 1 case */
    // And(a=ANDI, b=NotI, out=); /* out case */
    

    Mux4Way16(a=rOut, b=OutPlusOne, c=false, d=in, sel[0]=sel0,sel[1]= sel1, out=Rin);   
    
    Inc16(in=rOut, out=OutPlusOne);
    
    
    
    
    
    Register(in=Rin, load=Rload, out=out,out = rOut);

}
