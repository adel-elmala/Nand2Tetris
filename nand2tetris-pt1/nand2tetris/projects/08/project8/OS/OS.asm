//BOOTING
@256
D=A
@SP
M=D
@OS.$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.init
0;JMP
(OS.$ret.0)
//function Output.init 0
(OS.Output.init)
//push constant 16384
@16384
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 4
@Output.4
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop static 2
@Output.2
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@Output.1
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@Output.0
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.new 1
@OS.Output.init$ret.11
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.new
0;JMP
(OS.Output.init$ret.11)
//pop static 3
@Output.3
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//call Output.initMap 0
@OS.Output.init$ret.13
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.initMap
0;JMP
(OS.Output.init$ret.13)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//call Output.createShiftedMap 0
@OS.Output.init$ret.15
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.createShiftedMap
0;JMP
(OS.Output.init$ret.15)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Output.initMap 0
(OS.Output.initMap)
//push constant 127
@127
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@OS.Output.initMap$ret.21
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Array.new
0;JMP
(OS.Output.initMap$ret.21)
//pop static 5
@Output.5
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.35
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.35)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.49
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.49)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 33
@33
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.63
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.63)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 34
@34
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 20
@20
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.77
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.77)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.91
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.91)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 36
@36
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.105
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.105)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 37
@37
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 49
@49
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.119
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.119)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 38
@38
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.133
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.133)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 39
@39
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.147
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.147)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 40
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.161
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.161)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 41
@41
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.175
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.175)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 42
@42
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.189
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.189)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.203
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.203)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 44
@44
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.217
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.217)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 45
@45
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.231
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.231)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 46
@46
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.245
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.245)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 47
@47
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.259
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.259)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.273
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.273)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 49
@49
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.287
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.287)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 50
@50
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.301
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.301)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.315
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.315)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 52
@52
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 26
@26
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 25
@25
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 60
@60
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.329
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.329)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.343
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.343)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.357
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.357)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 55
@55
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 49
@49
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.371
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.371)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 56
@56
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.385
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.385)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 62
@62
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.399
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.399)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 58
@58
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.413
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.413)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.427
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.427)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 60
@60
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.441
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.441)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 61
@61
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.455
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.455)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 62
@62
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.469
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.469)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 64
@64
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.483
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.483)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.497
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.497)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.511
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.511)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 66
@66
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.525
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.525)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 67
@67
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.539
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.539)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 68
@68
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.553
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.553)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.567
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.567)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 70
@70
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.581
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.581)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 71
@71
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 44
@44
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.595
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.595)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 72
@72
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.609
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.609)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 73
@73
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.623
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.623)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 74
@74
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 60
@60
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.637
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.637)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 75
@75
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.651
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.651)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 76
@76
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.665
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.665)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 33
@33
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.679
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.679)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 78
@78
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 55
@55
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 55
@55
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.693
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.693)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 79
@79
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.707
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.707)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 80
@80
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.721
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.721)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 81
@81
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.735
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.735)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.749
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.749)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 83
@83
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.763
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.763)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 84
@84
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 45
@45
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.777
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.777)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 85
@85
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.791
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.791)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 86
@86
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.805
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.805)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 87
@87
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.819
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.819)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 88
@88
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.833
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.833)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 89
@89
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.847
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.847)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 49
@49
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.861
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.861)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 91
@91
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.875
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.875)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 92
@92
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.889
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.889)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 93
@93
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.903
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.903)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 94
@94
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.917
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.917)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 95
@95
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.931
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.931)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 96
@96
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.945
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.945)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 97
@97
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.959
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.959)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 98
@98
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.973
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.973)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 99
@99
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.987
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.987)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 60
@60
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1001
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1001)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1015
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1015)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 102
@102
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 38
@38
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1029
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1029)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 103
@103
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 62
@62
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1043
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1043)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 104
@104
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 55
@55
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1057
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1057)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 105
@105
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1071
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1071)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 106
@106
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 56
@56
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1085
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1085)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 107
@107
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1099
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1099)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 108
@108
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1113
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1113)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 109
@109
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 29
@29
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1127
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1127)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 110
@110
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 29
@29
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1141
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1141)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 111
@111
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1155
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1155)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1169
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1169)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 113
@113
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 62
@62
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1183
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1183)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 114
@114
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 29
@29
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 55
@55
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1197
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1197)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 115
@115
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1211
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1211)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 116
@116
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1225
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1225)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 117
@117
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1239
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1239)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 118
@118
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1253
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1253)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 119
@119
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1267
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1267)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 120
@120
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1281
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1281)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 121
@121
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 62
@62
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1295
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1295)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 122
@122
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1309
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1309)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 123
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 56
@56
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 56
@56
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1323
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1323)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 124
@124
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1337
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1337)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 125
@125
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 56
@56
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1351
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1351)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 126
@126
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 38
@38
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 45
@45
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 25
@25
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.create 12
@OS.Output.initMap$ret.1365
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@17
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.create
0;JMP
(OS.Output.initMap$ret.1365)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Output.create 1
(OS.Output.create)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@OS.Output.create$ret.1371
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Array.new
0;JMP
(OS.Output.create$ret.1371)
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 5
@Output.5
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 4
@4
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 5
@5
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 6
@6
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 7
@7
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 8
@8
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 9
@9
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 10
@10
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 11
@11
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Output.createShiftedMap 4
(OS.Output.createShiftedMap)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 127
@127
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@OS.Output.createShiftedMap$ret.1473
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Array.new
0;JMP
(OS.Output.createShiftedMap$ret.1473)
//pop static 6
@Output.6
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Output.createShiftedMap$WHILE_EXP0)
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 127
@127
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_1480
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1480
0;JMP
(LESS_1480)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1480)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Output.createShiftedMap$WHILE_END0
D;JNE
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 5
@Output.5
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@OS.Output.createShiftedMap$ret.1490
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Array.new
0;JMP
(OS.Output.createShiftedMap$ret.1490)
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 6
@Output.6
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP1
(OS.Output.createShiftedMap$WHILE_EXP1)
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_1505
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1505
0;JMP
(LESS_1505)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1505)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END1
@SP
M=M-1
A=M
D=M
@OS.Output.createShiftedMap$WHILE_END1
D;JNE
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 256
@256
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Output.createShiftedMap$ret.1517
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Output.createShiftedMap$ret.1517)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP1
@OS.Output.createShiftedMap$WHILE_EXP1
0;JMP
//label WHILE_END1
(OS.Output.createShiftedMap$WHILE_END1)
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_1530
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1530
0;JMP
(EQUAL_1530)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1530)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Output.createShiftedMap$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Output.createShiftedMap$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Output.createShiftedMap$IF_TRUE0)
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END0
@OS.Output.createShiftedMap$IF_END0
0;JMP
//label IF_FALSE0
(OS.Output.createShiftedMap$IF_FALSE0)
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END0
(OS.Output.createShiftedMap$IF_END0)
//goto WHILE_EXP0
@OS.Output.createShiftedMap$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Output.createShiftedMap$WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Output.getMap 1
(OS.Output.getMap)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_1550
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1550
0;JMP
(LESS_1550)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1550)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 126
@126
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_1553
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1553
0;JMP
(GREATER_1553)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1553)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Output.getMap$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Output.getMap$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Output.getMap$IF_TRUE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop argument 0
@0
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Output.getMap$IF_FALSE0)
//push static 2
@Output.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Output.getMap$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Output.getMap$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Output.getMap$IF_TRUE1)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 5
@Output.5
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END1
@OS.Output.getMap$IF_END1
0;JMP
//label IF_FALSE1
(OS.Output.getMap$IF_FALSE1)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 6
@Output.6
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END1
(OS.Output.getMap$IF_END1)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Output.drawChar 4
(OS.Output.drawChar)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Output.getMap 1
@OS.Output.drawChar$ret.1584
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.getMap
0;JMP
(OS.Output.drawChar$ret.1584)
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push static 1
@Output.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Output.drawChar$WHILE_EXP0)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_1591
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1591
0;JMP
(LESS_1591)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1591)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Output.drawChar$WHILE_END0
D;JNE
//push static 2
@Output.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Output.drawChar$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Output.drawChar$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Output.drawChar$IF_TRUE0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 4
@Output.4
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 256
@256
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
M=M-1
A=M
D=M
D=-D
@SP
A=M
M=D
@SP
M=M+1
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END0
@OS.Output.drawChar$IF_END0
0;JMP
//label IF_FALSE0
(OS.Output.drawChar$IF_FALSE0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 4
@Output.4
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 255
@255
D=A
@SP
A=M
M=D
@SP
M=M+1
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END0
(OS.Output.drawChar$IF_END0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 4
@Output.4
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP0
@OS.Output.drawChar$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Output.drawChar$WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Output.moveCursor 0
(OS.Output.moveCursor)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_1647
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1647
0;JMP
(LESS_1647)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1647)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 22
@22
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_1650
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1650
0;JMP
(GREATER_1650)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1650)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_1654
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1654
0;JMP
(LESS_1654)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1654)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_1658
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1658
0;JMP
(GREATER_1658)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1658)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Output.moveCursor$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Output.moveCursor$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Output.moveCursor$IF_TRUE0)
//push constant 20
@20
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.Output.moveCursor$ret.1664
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.Output.moveCursor$ret.1664)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Output.moveCursor$IF_FALSE0)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@OS.Output.moveCursor$ret.1669
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.divide
0;JMP
(OS.Output.moveCursor$ret.1669)
//pop static 0
@Output.0
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 352
@352
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Output.moveCursor$ret.1674
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Output.moveCursor$ret.1674)
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Output.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@Output.1
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Output.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Output.moveCursor$ret.1682
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Output.moveCursor$ret.1682)
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_1683
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1683
0;JMP
(EQUAL_1683)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1683)
//pop static 2
@Output.2
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.drawChar 1
@OS.Output.moveCursor$ret.1686
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.drawChar
0;JMP
(OS.Output.moveCursor$ret.1686)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Output.printChar 0
(OS.Output.printChar)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.newLine 0
@OS.Output.printChar$ret.1692
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.newLine
0;JMP
(OS.Output.printChar$ret.1692)
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_1693
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1693
0;JMP
(EQUAL_1693)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1693)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Output.printChar$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Output.printChar$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Output.printChar$IF_TRUE0)
//call Output.println 0
@OS.Output.printChar$ret.1697
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.println
0;JMP
(OS.Output.printChar$ret.1697)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END0
@OS.Output.printChar$IF_END0
0;JMP
//label IF_FALSE0
(OS.Output.printChar$IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.backSpace 0
@OS.Output.printChar$ret.1702
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.backSpace
0;JMP
(OS.Output.printChar$ret.1702)
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_1703
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1703
0;JMP
(EQUAL_1703)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1703)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Output.printChar$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Output.printChar$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Output.printChar$IF_TRUE1)
//call Output.backSpace 0
@OS.Output.printChar$ret.1707
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.backSpace
0;JMP
(OS.Output.printChar$ret.1707)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END1
@OS.Output.printChar$IF_END1
0;JMP
//label IF_FALSE1
(OS.Output.printChar$IF_FALSE1)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Output.drawChar 1
@OS.Output.printChar$ret.1712
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.drawChar
0;JMP
(OS.Output.printChar$ret.1712)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push static 2
@Output.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M
@OS.Output.printChar$IF_TRUE2
D;JNE
//goto IF_FALSE2
@OS.Output.printChar$IF_FALSE2
0;JMP
//label IF_TRUE2
(OS.Output.printChar$IF_TRUE2)
//push static 0
@Output.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@Output.0
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push static 1
@Output.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@Output.1
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE2
(OS.Output.printChar$IF_FALSE2)
//push static 0
@Output.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_1730
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1730
0;JMP
(EQUAL_1730)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1730)
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M
@OS.Output.printChar$IF_TRUE3
D;JNE
//goto IF_FALSE3
@OS.Output.printChar$IF_FALSE3
0;JMP
//label IF_TRUE3
(OS.Output.printChar$IF_TRUE3)
//call Output.println 0
@OS.Output.printChar$ret.1734
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.println
0;JMP
(OS.Output.printChar$ret.1734)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END3
@OS.Output.printChar$IF_END3
0;JMP
//label IF_FALSE3
(OS.Output.printChar$IF_FALSE3)
//push static 2
@Output.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop static 2
@Output.2
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END3
(OS.Output.printChar$IF_END3)
//label IF_END1
(OS.Output.printChar$IF_END1)
//label IF_END0
(OS.Output.printChar$IF_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Output.printString 2
(OS.Output.printString)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.length 1
@OS.Output.printString$ret.1748
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.length
0;JMP
(OS.Output.printString$ret.1748)
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Output.printString$WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_1753
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1753
0;JMP
(LESS_1753)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1753)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Output.printString$WHILE_END0
D;JNE
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.charAt 2
@OS.Output.printString$ret.1758
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.charAt
0;JMP
(OS.Output.printString$ret.1758)
//call Output.printChar 1
@OS.Output.printString$ret.1759
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.printChar
0;JMP
(OS.Output.printString$ret.1759)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP0
@OS.Output.printString$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Output.printString$WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Output.printInt 0
(OS.Output.printInt)
//push static 3
@Output.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.setInt 2
@OS.Output.printInt$ret.1772
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.setInt
0;JMP
(OS.Output.printInt$ret.1772)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push static 3
@Output.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Output.printString 1
@OS.Output.printInt$ret.1775
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.printString
0;JMP
(OS.Output.printInt$ret.1775)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Output.println 0
(OS.Output.println)
//push static 1
@Output.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 352
@352
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Output.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@Output.1
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@Output.0
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop static 2
@Output.2
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push static 1
@Output.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 8128
@8128
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_1793
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1793
0;JMP
(EQUAL_1793)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1793)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Output.println$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Output.println$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Output.println$IF_TRUE0)
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@Output.1
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Output.println$IF_FALSE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Output.backSpace 0
(OS.Output.backSpace)
//push static 2
@Output.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Output.backSpace$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Output.backSpace$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Output.backSpace$IF_TRUE0)
//push static 0
@Output.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_1809
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1809
0;JMP
(GREATER_1809)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1809)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Output.backSpace$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Output.backSpace$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Output.backSpace$IF_TRUE1)
//push static 0
@Output.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@Output.0
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push static 1
@Output.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@Output.1
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END1
@OS.Output.backSpace$IF_END1
0;JMP
//label IF_FALSE1
(OS.Output.backSpace$IF_FALSE1)
//push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@Output.0
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push static 1
@Output.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_1827
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_1827
0;JMP
(EQUAL_1827)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_1827)
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M
@OS.Output.backSpace$IF_TRUE2
D;JNE
//goto IF_FALSE2
@OS.Output.backSpace$IF_FALSE2
0;JMP
//label IF_TRUE2
(OS.Output.backSpace$IF_TRUE2)
//push constant 8128
@8128
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@Output.1
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE2
(OS.Output.backSpace$IF_FALSE2)
//push static 1
@Output.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 321
@321
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@Output.1
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END1
(OS.Output.backSpace$IF_END1)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 2
@Output.2
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END0
@OS.Output.backSpace$IF_END0
0;JMP
//label IF_FALSE0
(OS.Output.backSpace$IF_FALSE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop static 2
@Output.2
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END0
(OS.Output.backSpace$IF_END0)
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.drawChar 1
@OS.Output.backSpace$ret.1848
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.drawChar
0;JMP
(OS.Output.backSpace$ret.1848)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Game.new 0
(OS.Game.new)
//push constant 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Memory.alloc 1
@OS.Game.new$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Memory.alloc
0;JMP
(OS.Game.new$ret.2)
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 6
@6
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 20
@20
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 7
@7
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 50
@50
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 220
@220
D=A
@SP
A=M
M=D
@SP
M=M+1
//push this 6
@6
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.new 3
@OS.Game.new$ret.11
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@8
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.new
0;JMP
(OS.Game.new$ret.11)
//pop this 0
@0
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 360
@360
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 230
@230
D=A
@SP
A=M
M=D
@SP
M=M+1
//push this 7
@7
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.new 3
@OS.Game.new$ret.16
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@8
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.new
0;JMP
(OS.Game.new$ret.16)
//pop this 1
@1
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 480
@480
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 230
@230
D=A
@SP
A=M
M=D
@SP
M=M+1
//push this 7
@7
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.new 3
@OS.Game.new$ret.21
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@8
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.new
0;JMP
(OS.Game.new$ret.21)
//pop this 2
@2
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 3
@3
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Game.dispose 0
(OS.Game.dispose)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.dispose 1
@OS.Game.dispose$ret.31
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.dispose
0;JMP
(OS.Game.dispose$ret.31)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.dispose 1
@OS.Game.dispose$ret.34
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.dispose
0;JMP
(OS.Game.dispose$ret.34)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.dispose 1
@OS.Game.dispose$ret.37
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.dispose
0;JMP
(OS.Game.dispose$ret.37)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Memory.deAlloc 1
@OS.Game.dispose$ret.40
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Memory.deAlloc
0;JMP
(OS.Game.dispose$ret.40)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Game.moveSquare 0
(OS.Game.moveSquare)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 4
@4
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Game.moveSquare$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Game.moveSquare$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Game.moveSquare$IF_TRUE0)
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.moveUp 1
@OS.Game.moveSquare$ret.52
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.moveUp
0;JMP
(OS.Game.moveSquare$ret.52)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 4
@4
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END0
@OS.Game.moveSquare$IF_END0
0;JMP
//label IF_FALSE0
(OS.Game.moveSquare$IF_FALSE0)
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.moveDown 1
@OS.Game.moveSquare$ret.59
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.moveDown
0;JMP
(OS.Game.moveSquare$ret.59)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END0
(OS.Game.moveSquare$IF_END0)
//push constant 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.wait 1
@OS.Game.moveSquare$ret.63
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.wait
0;JMP
(OS.Game.moveSquare$ret.63)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Game.movingObstacles 0
(OS.Game.movingObstacles)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.moveLeft 1
@OS.Game.movingObstacles$ret.71
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.moveLeft
0;JMP
(OS.Game.movingObstacles$ret.71)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.moveLeft 1
@OS.Game.movingObstacles$ret.74
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.moveLeft
0;JMP
(OS.Game.movingObstacles$ret.74)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Game.collision 1
@OS.Game.movingObstacles$ret.77
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Game.collision
0;JMP
(OS.Game.movingObstacles$ret.77)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Game.collision 6
(OS.Game.collision)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.getX 1
@OS.Game.collision$ret.85
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.getX
0;JMP
(OS.Game.collision$ret.85)
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.getX 1
@OS.Game.collision$ret.88
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.getX
0;JMP
(OS.Game.collision$ret.88)
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.getX 1
@OS.Game.collision$ret.91
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.getX
0;JMP
(OS.Game.collision$ret.91)
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.getY 1
@OS.Game.collision$ret.94
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.getY
0;JMP
(OS.Game.collision$ret.94)
//push this 6
@6
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.getY 1
@OS.Game.collision$ret.99
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.getY
0;JMP
(OS.Game.collision$ret.99)
//pop local 4
@4
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.getY 1
@OS.Game.collision$ret.102
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.getY
0;JMP
(OS.Game.collision$ret.102)
//pop local 5
@5
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_106
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_106
0;JMP
(LESS_106)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_106)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 6
@6
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_111
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_111
0;JMP
(GREATER_111)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_111)
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 7
@7
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_117
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_117
0;JMP
(LESS_117)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_117)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 6
@6
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 7
@7
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_124
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_124
0;JMP
(GREATER_124)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_124)
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Game.collision$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Game.collision$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Game.collision$IF_TRUE0)
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 4
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_132
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_132
0;JMP
(GREATER_132)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_132)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Game.collision$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Game.collision$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Game.collision$IF_TRUE1)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop this 5
@5
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 20
@20
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.moveCursor 2
@OS.Game.collision$ret.141
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.moveCursor
0;JMP
(OS.Game.collision$ret.141)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.new 1
@OS.Game.collision$ret.144
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.new
0;JMP
(OS.Game.collision$ret.144)
//push constant 71
@71
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.146
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.146)
//push constant 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.148
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.148)
//push constant 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.150
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.150)
//push constant 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.152
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.152)
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.154
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.154)
//push constant 79
@79
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.156
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.156)
//push constant 86
@86
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.158
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.158)
//push constant 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.160
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.160)
//push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.162
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.162)
//push constant 33
@33
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.164
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.164)
//call Output.printString 1
@OS.Game.collision$ret.165
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.printString
0;JMP
(OS.Game.collision$ret.165)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//call Sys.halt 0
@OS.Game.collision$ret.167
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.halt
0;JMP
(OS.Game.collision$ret.167)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END1
@OS.Game.collision$IF_END1
0;JMP
//label IF_FALSE1
(OS.Game.collision$IF_FALSE1)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 5
@5
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 8
@8
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop this 8
@8
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.moveCursor 2
@OS.Game.collision$ret.179
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.moveCursor
0;JMP
(OS.Game.collision$ret.179)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.new 1
@OS.Game.collision$ret.182
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.new
0;JMP
(OS.Game.collision$ret.182)
//push constant 83
@83
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.184
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.184)
//push constant 99
@99
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.186
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.186)
//push constant 111
@111
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.188
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.188)
//push constant 114
@114
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.190
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.190)
//push constant 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.192
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.192)
//push constant 58
@58
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.194
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.194)
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.196
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.196)
//call Output.printString 1
@OS.Game.collision$ret.197
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.printString
0;JMP
(OS.Game.collision$ret.197)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 8
@8
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Output.printInt 1
@OS.Game.collision$ret.200
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.printInt
0;JMP
(OS.Game.collision$ret.200)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END1
(OS.Game.collision$IF_END1)
//label IF_FALSE0
(OS.Game.collision$IF_FALSE0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_206
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_206
0;JMP
(LESS_206)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_206)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 6
@6
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_211
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_211
0;JMP
(GREATER_211)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_211)
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 7
@7
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_217
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_217
0;JMP
(LESS_217)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_217)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 6
@6
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 7
@7
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_224
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_224
0;JMP
(GREATER_224)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_224)
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M
@OS.Game.collision$IF_TRUE2
D;JNE
//goto IF_FALSE2
@OS.Game.collision$IF_FALSE2
0;JMP
//label IF_TRUE2
(OS.Game.collision$IF_TRUE2)
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 5
@5
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_232
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_232
0;JMP
(GREATER_232)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_232)
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M
@OS.Game.collision$IF_TRUE3
D;JNE
//goto IF_FALSE3
@OS.Game.collision$IF_FALSE3
0;JMP
//label IF_TRUE3
(OS.Game.collision$IF_TRUE3)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop this 5
@5
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 20
@20
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.moveCursor 2
@OS.Game.collision$ret.241
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.moveCursor
0;JMP
(OS.Game.collision$ret.241)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.new 1
@OS.Game.collision$ret.244
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.new
0;JMP
(OS.Game.collision$ret.244)
//push constant 71
@71
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.246
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.246)
//push constant 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.248
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.248)
//push constant 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.250
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.250)
//push constant 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.252
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.252)
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.254
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.254)
//push constant 79
@79
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.256
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.256)
//push constant 86
@86
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.258
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.258)
//push constant 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.260
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.260)
//push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.262
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.262)
//push constant 33
@33
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.264
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.264)
//call Output.printString 1
@OS.Game.collision$ret.265
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.printString
0;JMP
(OS.Game.collision$ret.265)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//call Sys.halt 0
@OS.Game.collision$ret.267
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.halt
0;JMP
(OS.Game.collision$ret.267)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END3
@OS.Game.collision$IF_END3
0;JMP
//label IF_FALSE3
(OS.Game.collision$IF_FALSE3)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 5
@5
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 8
@8
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop this 8
@8
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.moveCursor 2
@OS.Game.collision$ret.279
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.moveCursor
0;JMP
(OS.Game.collision$ret.279)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.new 1
@OS.Game.collision$ret.282
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.new
0;JMP
(OS.Game.collision$ret.282)
//push constant 83
@83
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.284
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.284)
//push constant 99
@99
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.286
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.286)
//push constant 111
@111
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.288
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.288)
//push constant 114
@114
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.290
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.290)
//push constant 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.292
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.292)
//push constant 58
@58
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.294
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.294)
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Game.collision$ret.296
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Game.collision$ret.296)
//call Output.printString 1
@OS.Game.collision$ret.297
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.printString
0;JMP
(OS.Game.collision$ret.297)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 8
@8
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Output.printInt 1
@OS.Game.collision$ret.300
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.printInt
0;JMP
(OS.Game.collision$ret.300)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END3
(OS.Game.collision$IF_END3)
//label IF_FALSE2
(OS.Game.collision$IF_FALSE2)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Game.run 2
(OS.Game.run)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 8
@8
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Game.run$WHILE_EXP0)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Game.run$WHILE_END0
D;JNE
//label WHILE_EXP1
(OS.Game.run$WHILE_EXP1)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_321
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_321
0;JMP
(EQUAL_321)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_321)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END1
@SP
M=M-1
A=M
D=M
@OS.Game.run$WHILE_END1
D;JNE
//call Keyboard.keyPressed 0
@OS.Game.run$ret.324
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Keyboard.keyPressed
0;JMP
(OS.Game.run$ret.324)
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Game.moveSquare 1
@OS.Game.run$ret.327
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Game.moveSquare
0;JMP
(OS.Game.run$ret.327)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Game.movingObstacles 1
@OS.Game.run$ret.330
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Game.movingObstacles
0;JMP
(OS.Game.run$ret.330)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP1
@OS.Game.run$WHILE_EXP1
0;JMP
//label WHILE_END1
(OS.Game.run$WHILE_END1)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 81
@81
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_336
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_336
0;JMP
(EQUAL_336)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_336)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Game.run$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Game.run$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Game.run$IF_TRUE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Game.run$IF_FALSE0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_346
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_346
0;JMP
(EQUAL_346)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_346)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Game.run$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Game.run$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Game.run$IF_TRUE1)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop this 4
@4
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE1
(OS.Game.run$IF_FALSE1)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_356
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_356
0;JMP
(EQUAL_356)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_356)
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M
@OS.Game.run$IF_TRUE2
D;JNE
//goto IF_FALSE2
@OS.Game.run$IF_FALSE2
0;JMP
//label IF_TRUE2
(OS.Game.run$IF_TRUE2)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 4
@4
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE2
(OS.Game.run$IF_FALSE2)
//label WHILE_EXP2
(OS.Game.run$WHILE_EXP2)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_366
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_366
0;JMP
(EQUAL_366)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_366)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END2
@SP
M=M-1
A=M
D=M
@OS.Game.run$WHILE_END2
D;JNE
//call Keyboard.keyPressed 0
@OS.Game.run$ret.370
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Keyboard.keyPressed
0;JMP
(OS.Game.run$ret.370)
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Game.moveSquare 1
@OS.Game.run$ret.373
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Game.moveSquare
0;JMP
(OS.Game.run$ret.373)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Game.movingObstacles 1
@OS.Game.run$ret.376
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Game.movingObstacles
0;JMP
(OS.Game.run$ret.376)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP2
@OS.Game.run$WHILE_EXP2
0;JMP
//label WHILE_END2
(OS.Game.run$WHILE_END2)
//goto WHILE_EXP0
@OS.Game.run$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Game.run$WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Main.main 1
(OS.Main.main)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Game.new 0
@OS.Main.main$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Game.new
0;JMP
(OS.Main.main$ret.1)
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Game.run 1
@OS.Main.main$ret.4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Game.run
0;JMP
(OS.Main.main$ret.4)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Game.dispose 1
@OS.Main.main$ret.7
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Game.dispose
0;JMP
(OS.Main.main$ret.7)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Math.init 1
(OS.Math.init)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@OS.Math.init$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Array.new
0;JMP
(OS.Math.init$ret.2)
//pop static 1
@Math.1
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@OS.Math.init$ret.5
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Array.new
0;JMP
(OS.Math.init$ret.5)
//pop static 0
@Math.0
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Math.init$WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_18
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_18
0;JMP
(LESS_18)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_18)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Math.init$WHILE_END0
D;JNE
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP0
@OS.Math.init$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Math.init$WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Math.abs 0
(OS.Math.abs)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_54
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_54
0;JMP
(LESS_54)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_54)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Math.abs$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Math.abs$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Math.abs$IF_TRUE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
M=M-1
A=M
D=M
D=-D
@SP
A=M
M=D
@SP
M=M+1
//pop argument 0
@0
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Math.abs$IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Math.multiply 5
(OS.Math.multiply)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_67
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_67
0;JMP
(LESS_67)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_67)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_70
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_70
0;JMP
(GREATER_70)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_70)
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_74
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_74
0;JMP
(GREATER_74)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_74)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_77
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_77
0;JMP
(LESS_77)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_77)
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//pop local 4
@4
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.abs 1
@OS.Math.multiply$ret.82
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.abs
0;JMP
(OS.Math.multiply$ret.82)
//pop argument 0
@0
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.abs 1
@OS.Math.multiply$ret.85
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.abs
0;JMP
(OS.Math.multiply$ret.85)
//pop argument 1
@1
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_89
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_89
0;JMP
(LESS_89)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_89)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Math.multiply$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Math.multiply$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Math.multiply$IF_TRUE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 0
@0
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 1
@1
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Math.multiply$IF_FALSE0)
//label WHILE_EXP0
(OS.Math.multiply$WHILE_EXP0)
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_107
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_107
0;JMP
(LESS_107)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_107)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Math.multiply$WHILE_END0
D;JNE
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_118
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_118
0;JMP
(EQUAL_118)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_118)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Math.multiply$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Math.multiply$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Math.multiply$IF_TRUE1)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE1
(OS.Math.multiply$IF_FALSE1)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 0
@0
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP0
@OS.Math.multiply$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Math.multiply$WHILE_END0)
//push local 4
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M
@OS.Math.multiply$IF_TRUE2
D;JNE
//goto IF_FALSE2
@OS.Math.multiply$IF_FALSE2
0;JMP
//label IF_TRUE2
(OS.Math.multiply$IF_TRUE2)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
M=M-1
A=M
D=M
D=-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE2
(OS.Math.multiply$IF_FALSE2)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Math.divide 4
(OS.Math.divide)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_159
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_159
0;JMP
(EQUAL_159)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_159)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Math.divide$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Math.divide$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Math.divide$IF_TRUE0)
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.Math.divide$ret.164
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.Math.divide$ret.164)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Math.divide$IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_169
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_169
0;JMP
(LESS_169)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_169)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_172
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_172
0;JMP
(GREATER_172)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_172)
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_176
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_176
0;JMP
(GREATER_176)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_176)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_179
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_179
0;JMP
(LESS_179)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_179)
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.abs 1
@OS.Math.divide$ret.187
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.abs
0;JMP
(OS.Math.divide$ret.187)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.abs 1
@OS.Math.divide$ret.193
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.abs
0;JMP
(OS.Math.divide$ret.193)
//pop argument 0
@0
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Math.divide$WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_198
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_198
0;JMP
(LESS_198)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_198)
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Math.divide$WHILE_END0
D;JNE
//push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_220
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_220
0;JMP
(LESS_220)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_220)
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Math.divide$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Math.divide$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Math.divide$IF_TRUE1)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_259
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_259
0;JMP
(GREATER_259)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_259)
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M
@OS.Math.divide$IF_TRUE2
D;JNE
//goto IF_FALSE2
@OS.Math.divide$IF_FALSE2
0;JMP
//label IF_TRUE2
(OS.Math.divide$IF_TRUE2)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE2
(OS.Math.divide$IF_FALSE2)
//label IF_FALSE1
(OS.Math.divide$IF_FALSE1)
//goto WHILE_EXP0
@OS.Math.divide$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Math.divide$WHILE_END0)
//label WHILE_EXP1
(OS.Math.divide$WHILE_EXP1)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
M=M-1
A=M
D=M
D=-D
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_278
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_278
0;JMP
(GREATER_278)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_278)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END1
@SP
M=M-1
A=M
D=M
@OS.Math.divide$WHILE_END1
D;JNE
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_291
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_291
0;JMP
(GREATER_291)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_291)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M
@OS.Math.divide$IF_TRUE3
D;JNE
//goto IF_FALSE3
@OS.Math.divide$IF_FALSE3
0;JMP
//label IF_TRUE3
(OS.Math.divide$IF_TRUE3)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Math.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop argument 0
@0
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE3
(OS.Math.divide$IF_FALSE3)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP1
@OS.Math.divide$WHILE_EXP1
0;JMP
//label WHILE_END1
(OS.Math.divide$WHILE_END1)
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE4
@SP
M=M-1
A=M
D=M
@OS.Math.divide$IF_TRUE4
D;JNE
//goto IF_FALSE4
@OS.Math.divide$IF_FALSE4
0;JMP
//label IF_TRUE4
(OS.Math.divide$IF_TRUE4)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
M=M-1
A=M
D=M
D=-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE4
(OS.Math.divide$IF_FALSE4)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Math.sqrt 4
(OS.Math.sqrt)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_332
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_332
0;JMP
(LESS_332)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_332)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Math.sqrt$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Math.sqrt$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Math.sqrt$IF_TRUE0)
//push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.Math.sqrt$ret.337
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.Math.sqrt$ret.337)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Math.sqrt$IF_FALSE0)
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Math.sqrt$WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
M=M-1
A=M
D=M
D=-D
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_346
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_346
0;JMP
(GREATER_346)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_346)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Math.sqrt$WHILE_END0
D;JNE
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Math.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Math.sqrt$ret.359
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Math.sqrt$ret.359)
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_363
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_363
0;JMP
(GREATER_363)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_363)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_367
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_367
0;JMP
(LESS_367)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_367)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Math.sqrt$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Math.sqrt$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Math.sqrt$IF_TRUE1)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE1
(OS.Math.sqrt$IF_FALSE1)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP0
@OS.Math.sqrt$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Math.sqrt$WHILE_END0)
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Math.max 0
(OS.Math.max)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_387
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_387
0;JMP
(GREATER_387)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_387)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Math.max$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Math.max$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Math.max$IF_TRUE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 1
@1
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Math.max$IF_FALSE0)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Math.min 0
(OS.Math.min)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_399
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_399
0;JMP
(LESS_399)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_399)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Math.min$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Math.min$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Math.min$IF_TRUE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 1
@1
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Math.min$IF_FALSE0)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Keyboard.init 0
(OS.Keyboard.init)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Keyboard.keyPressed 0
(OS.Keyboard.keyPressed)
//push constant 24576
@24576
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Memory.peek 1
@OS.Keyboard.keyPressed$ret.5
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Memory.peek
0;JMP
(OS.Keyboard.keyPressed$ret.5)
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Keyboard.readChar 2
(OS.Keyboard.readChar)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Output.printChar 1
@OS.Keyboard.readChar$ret.9
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.printChar
0;JMP
(OS.Keyboard.readChar$ret.9)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Keyboard.readChar$WHILE_EXP0)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_14
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_14
0;JMP
(EQUAL_14)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_14)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_17
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_17
0;JMP
(GREATER_17)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_17)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Keyboard.readChar$WHILE_END0
D;JNE
//call Keyboard.keyPressed 0
@OS.Keyboard.readChar$ret.21
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Keyboard.keyPressed
0;JMP
(OS.Keyboard.readChar$ret.21)
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_25
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_25
0;JMP
(GREATER_25)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_25)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Keyboard.readChar$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Keyboard.readChar$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Keyboard.readChar$IF_TRUE0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Keyboard.readChar$IF_FALSE0)
//goto WHILE_EXP0
@OS.Keyboard.readChar$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Keyboard.readChar$WHILE_END0)
//call String.backSpace 0
@OS.Keyboard.readChar$ret.34
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.backSpace
0;JMP
(OS.Keyboard.readChar$ret.34)
//call Output.printChar 1
@OS.Keyboard.readChar$ret.35
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.printChar
0;JMP
(OS.Keyboard.readChar$ret.35)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Output.printChar 1
@OS.Keyboard.readChar$ret.38
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.printChar
0;JMP
(OS.Keyboard.readChar$ret.38)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Keyboard.readLine 5
(OS.Keyboard.readLine)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 80
@80
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.new 1
@OS.Keyboard.readLine$ret.44
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.new
0;JMP
(OS.Keyboard.readLine$ret.44)
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Output.printString 1
@OS.Keyboard.readLine$ret.47
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.printString
0;JMP
(OS.Keyboard.readLine$ret.47)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//call String.newLine 0
@OS.Keyboard.readLine$ret.49
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.newLine
0;JMP
(OS.Keyboard.readLine$ret.49)
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//call String.backSpace 0
@OS.Keyboard.readLine$ret.51
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.backSpace
0;JMP
(OS.Keyboard.readLine$ret.51)
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Keyboard.readLine$WHILE_EXP0)
//push local 4
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Keyboard.readLine$WHILE_END0
D;JNE
//call Keyboard.readChar 0
@OS.Keyboard.readLine$ret.58
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Keyboard.readChar
0;JMP
(OS.Keyboard.readLine$ret.58)
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_62
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_62
0;JMP
(EQUAL_62)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_62)
//pop local 4
@4
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 4
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Keyboard.readLine$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Keyboard.readLine$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Keyboard.readLine$IF_TRUE0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_71
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_71
0;JMP
(EQUAL_71)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_71)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Keyboard.readLine$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Keyboard.readLine$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Keyboard.readLine$IF_TRUE1)
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.eraseLastChar 1
@OS.Keyboard.readLine$ret.76
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.eraseLastChar
0;JMP
(OS.Keyboard.readLine$ret.76)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END1
@OS.Keyboard.readLine$IF_END1
0;JMP
//label IF_FALSE1
(OS.Keyboard.readLine$IF_FALSE1)
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Keyboard.readLine$ret.82
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Keyboard.readLine$ret.82)
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END1
(OS.Keyboard.readLine$IF_END1)
//label IF_FALSE0
(OS.Keyboard.readLine$IF_FALSE0)
//goto WHILE_EXP0
@OS.Keyboard.readLine$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Keyboard.readLine$WHILE_END0)
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Keyboard.readInt 2
(OS.Keyboard.readInt)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Keyboard.readLine 1
@OS.Keyboard.readInt$ret.92
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Keyboard.readLine
0;JMP
(OS.Keyboard.readInt$ret.92)
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.intValue 1
@OS.Keyboard.readInt$ret.95
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.intValue
0;JMP
(OS.Keyboard.readInt$ret.95)
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call String.dispose 1
@OS.Keyboard.readInt$ret.98
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.dispose
0;JMP
(OS.Keyboard.readInt$ret.98)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Screen.init 1
(OS.Screen.init)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 16384
@16384
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@Screen.1
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop static 2
@Screen.2
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@OS.Screen.init$ret.7
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Array.new
0;JMP
(OS.Screen.init$ret.7)
//pop static 0
@Screen.0
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Screen.init$WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_20
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_20
0;JMP
(LESS_20)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_20)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Screen.init$WHILE_END0
D;JNE
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP0
@OS.Screen.init$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Screen.init$WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Screen.clearScreen 1
(OS.Screen.clearScreen)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//label WHILE_EXP0
(OS.Screen.clearScreen$WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 8192
@8192
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_57
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_57
0;JMP
(LESS_57)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_57)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Screen.clearScreen$WHILE_END0
D;JNE
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Screen.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP0
@OS.Screen.clearScreen$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Screen.clearScreen$WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Screen.updateLocation 0
(OS.Screen.updateLocation)
//push static 2
@Screen.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Screen.updateLocation$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Screen.updateLocation$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Screen.updateLocation$IF_TRUE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Screen.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Screen.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END0
@OS.Screen.updateLocation$IF_END0
0;JMP
//label IF_FALSE0
(OS.Screen.updateLocation$IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Screen.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Screen.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END0
(OS.Screen.updateLocation$IF_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Screen.setColor 0
(OS.Screen.setColor)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 2
@Screen.2
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Screen.drawPixel 3
(OS.Screen.drawPixel)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_123
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_123
0;JMP
(LESS_123)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_123)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 511
@511
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_126
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_126
0;JMP
(GREATER_126)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_126)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_130
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_130
0;JMP
(LESS_130)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_130)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 255
@255
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_134
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_134
0;JMP
(GREATER_134)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_134)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Screen.drawPixel$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Screen.drawPixel$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Screen.drawPixel$IF_TRUE0)
//push constant 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.Screen.drawPixel$ret.140
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.Screen.drawPixel$ret.140)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Screen.drawPixel$IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@OS.Screen.drawPixel$ret.145
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.divide
0;JMP
(OS.Screen.drawPixel$ret.145)
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Screen.drawPixel$ret.150
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Screen.drawPixel$ret.150)
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Screen.drawPixel$ret.155
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Screen.drawPixel$ret.155)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.updateLocation 2
@OS.Screen.drawPixel$ret.165
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.updateLocation
0;JMP
(OS.Screen.drawPixel$ret.165)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Screen.drawConditional 0
(OS.Screen.drawConditional)
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Screen.drawConditional$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Screen.drawConditional$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Screen.drawConditional$IF_TRUE0)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawPixel 2
@OS.Screen.drawConditional$ret.176
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawPixel
0;JMP
(OS.Screen.drawConditional$ret.176)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END0
@OS.Screen.drawConditional$IF_END0
0;JMP
//label IF_FALSE0
(OS.Screen.drawConditional$IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawPixel 2
@OS.Screen.drawConditional$ret.182
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawPixel
0;JMP
(OS.Screen.drawConditional$ret.182)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END0
(OS.Screen.drawConditional$IF_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Screen.drawLine 11
(OS.Screen.drawLine)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_190
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_190
0;JMP
(LESS_190)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_190)
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 511
@511
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_193
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_193
0;JMP
(GREATER_193)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_193)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_197
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_197
0;JMP
(LESS_197)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_197)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 255
@255
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_201
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_201
0;JMP
(GREATER_201)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_201)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Screen.drawLine$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Screen.drawLine$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Screen.drawLine$IF_TRUE0)
//push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.Screen.drawLine$ret.207
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.Screen.drawLine$ret.207)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Screen.drawLine$IF_FALSE0)
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//call Math.abs 1
@OS.Screen.drawLine$ret.213
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.abs
0;JMP
(OS.Screen.drawLine$ret.213)
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//call Math.abs 1
@OS.Screen.drawLine$ret.218
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.abs
0;JMP
(OS.Screen.drawLine$ret.218)
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_222
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_222
0;JMP
(LESS_222)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_222)
//pop local 6
@6
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 6
@6
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_227
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_227
0;JMP
(LESS_227)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_227)
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//push local 6
@6
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_233
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_233
0;JMP
(LESS_233)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_233)
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Screen.drawLine$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Screen.drawLine$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Screen.drawLine$IF_TRUE1)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 4
@4
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 0
@0
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 4
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 2
@2
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 4
@4
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 1
@1
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 4
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 3
@3
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE1
(OS.Screen.drawLine$IF_FALSE1)
//push local 6
@6
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M
@OS.Screen.drawLine$IF_TRUE2
D;JNE
//goto IF_FALSE2
@OS.Screen.drawLine$IF_FALSE2
0;JMP
//label IF_TRUE2
(OS.Screen.drawLine$IF_TRUE2)
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 4
@4
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 4
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 8
@8
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_270
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_270
0;JMP
(GREATER_270)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_270)
//pop local 7
@7
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END2
@OS.Screen.drawLine$IF_END2
0;JMP
//label IF_FALSE2
(OS.Screen.drawLine$IF_FALSE2)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 8
@8
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_282
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_282
0;JMP
(GREATER_282)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_282)
//pop local 7
@7
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END2
(OS.Screen.drawLine$IF_END2)
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Screen.drawLine$ret.287
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Screen.drawLine$ret.287)
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 5
@5
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Screen.drawLine$ret.293
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Screen.drawLine$ret.293)
//pop local 9
@9
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Screen.drawLine$ret.299
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Screen.drawLine$ret.299)
//pop local 10
@10
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 6
@6
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawConditional 3
@OS.Screen.drawLine$ret.304
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@8
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawConditional
0;JMP
(OS.Screen.drawLine$ret.304)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Screen.drawLine$WHILE_EXP0)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 8
@8
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_309
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_309
0;JMP
(LESS_309)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_309)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Screen.drawLine$WHILE_END0
D;JNE
//push local 5
@5
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_314
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_314
0;JMP
(LESS_314)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_314)
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M
@OS.Screen.drawLine$IF_TRUE3
D;JNE
//goto IF_FALSE3
@OS.Screen.drawLine$IF_FALSE3
0;JMP
//label IF_TRUE3
(OS.Screen.drawLine$IF_TRUE3)
//push local 5
@5
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 9
@9
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 5
@5
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END3
@OS.Screen.drawLine$IF_END3
0;JMP
//label IF_FALSE3
(OS.Screen.drawLine$IF_FALSE3)
//push local 5
@5
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 10
@10
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 5
@5
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 7
@7
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE4
@SP
M=M-1
A=M
D=M
@OS.Screen.drawLine$IF_TRUE4
D;JNE
//goto IF_FALSE4
@OS.Screen.drawLine$IF_FALSE4
0;JMP
//label IF_TRUE4
(OS.Screen.drawLine$IF_TRUE4)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END4
@OS.Screen.drawLine$IF_END4
0;JMP
//label IF_FALSE4
(OS.Screen.drawLine$IF_FALSE4)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END4
(OS.Screen.drawLine$IF_END4)
//label IF_END3
(OS.Screen.drawLine$IF_END3)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 6
@6
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawConditional 3
@OS.Screen.drawLine$ret.351
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@8
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawConditional
0;JMP
(OS.Screen.drawLine$ret.351)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP0
@OS.Screen.drawLine$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Screen.drawLine$WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Screen.drawRectangle 9
(OS.Screen.drawRectangle)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_360
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_360
0;JMP
(GREATER_360)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_360)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_363
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_363
0;JMP
(GREATER_363)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_363)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_367
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_367
0;JMP
(LESS_367)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_367)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 511
@511
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_371
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_371
0;JMP
(GREATER_371)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_371)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_375
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_375
0;JMP
(LESS_375)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_375)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 255
@255
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_379
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_379
0;JMP
(GREATER_379)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_379)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Screen.drawRectangle$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Screen.drawRectangle$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Screen.drawRectangle$IF_TRUE0)
//push constant 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.Screen.drawRectangle$ret.385
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.Screen.drawRectangle$ret.385)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Screen.drawRectangle$IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@OS.Screen.drawRectangle$ret.390
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.divide
0;JMP
(OS.Screen.drawRectangle$ret.390)
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Screen.drawRectangle$ret.395
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Screen.drawRectangle$ret.395)
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 7
@7
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@OS.Screen.drawRectangle$ret.400
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.divide
0;JMP
(OS.Screen.drawRectangle$ret.400)
//pop local 4
@4
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 4
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Screen.drawRectangle$ret.405
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Screen.drawRectangle$ret.405)
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 8
@8
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 7
@7
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop local 6
@6
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 8
@8
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 5
@5
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Screen.drawRectangle$ret.429
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Screen.drawRectangle$ret.429)
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 4
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Screen.drawRectangle$WHILE_EXP0)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_440
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_440
0;JMP
(GREATER_440)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_440)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Screen.drawRectangle$WHILE_END0
D;JNE
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_450
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_450
0;JMP
(EQUAL_450)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_450)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Screen.drawRectangle$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Screen.drawRectangle$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Screen.drawRectangle$IF_TRUE1)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 5
@5
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 6
@6
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//call Screen.updateLocation 2
@OS.Screen.drawRectangle$ret.458
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.updateLocation
0;JMP
(OS.Screen.drawRectangle$ret.458)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END1
@OS.Screen.drawRectangle$IF_END1
0;JMP
//label IF_FALSE1
(OS.Screen.drawRectangle$IF_FALSE1)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 6
@6
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.updateLocation 2
@OS.Screen.drawRectangle$ret.464
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.updateLocation
0;JMP
(OS.Screen.drawRectangle$ret.464)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP1
(OS.Screen.drawRectangle$WHILE_EXP1)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_473
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_473
0;JMP
(LESS_473)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_473)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END1
@SP
M=M-1
A=M
D=M
@OS.Screen.drawRectangle$WHILE_END1
D;JNE
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
M=M-1
A=M
D=M
D=-D
@SP
A=M
M=D
@SP
M=M+1
//call Screen.updateLocation 2
@OS.Screen.drawRectangle$ret.479
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.updateLocation
0;JMP
(OS.Screen.drawRectangle$ret.479)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP1
@OS.Screen.drawRectangle$WHILE_EXP1
0;JMP
//label WHILE_END1
(OS.Screen.drawRectangle$WHILE_END1)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 5
@5
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.updateLocation 2
@OS.Screen.drawRectangle$ret.489
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.updateLocation
0;JMP
(OS.Screen.drawRectangle$ret.489)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END1
(OS.Screen.drawRectangle$IF_END1)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 1
@1
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP0
@OS.Screen.drawRectangle$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Screen.drawRectangle$WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Screen.drawHorizontal 11
(OS.Screen.drawHorizontal)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.min 2
@OS.Screen.drawHorizontal$ret.509
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.min
0;JMP
(OS.Screen.drawHorizontal$ret.509)
//pop local 7
@7
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.max 2
@OS.Screen.drawHorizontal$ret.513
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.max
0;JMP
(OS.Screen.drawHorizontal$ret.513)
//pop local 8
@8
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
M=M-1
A=M
D=M
D=-D
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_518
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_518
0;JMP
(GREATER_518)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_518)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 256
@256
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_521
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_521
0;JMP
(LESS_521)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_521)
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//push local 7
@7
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 512
@512
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_525
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_525
0;JMP
(LESS_525)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_525)
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//push local 8
@8
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
M=M-1
A=M
D=M
D=-D
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_530
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_530
0;JMP
(GREATER_530)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_530)
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Screen.drawHorizontal$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Screen.drawHorizontal$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Screen.drawHorizontal$IF_TRUE0)
//push local 7
@7
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.max 2
@OS.Screen.drawHorizontal$ret.537
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.max
0;JMP
(OS.Screen.drawHorizontal$ret.537)
//pop local 7
@7
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 8
@8
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 511
@511
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.min 2
@OS.Screen.drawHorizontal$ret.541
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.min
0;JMP
(OS.Screen.drawHorizontal$ret.541)
//pop local 8
@8
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 7
@7
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@OS.Screen.drawHorizontal$ret.545
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.divide
0;JMP
(OS.Screen.drawHorizontal$ret.545)
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 7
@7
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Screen.drawHorizontal$ret.550
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Screen.drawHorizontal$ret.550)
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 9
@9
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 8
@8
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@OS.Screen.drawHorizontal$ret.555
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.divide
0;JMP
(OS.Screen.drawHorizontal$ret.555)
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 8
@8
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Screen.drawHorizontal$ret.560
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Screen.drawHorizontal$ret.560)
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 10
@10
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 9
@9
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop local 5
@5
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 10
@10
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Screen.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 4
@4
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Screen.drawHorizontal$ret.584
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Screen.drawHorizontal$ret.584)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 6
@6
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 6
@6
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 6
@6
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_598
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_598
0;JMP
(EQUAL_598)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_598)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Screen.drawHorizontal$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Screen.drawHorizontal$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Screen.drawHorizontal$IF_TRUE1)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 4
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 5
@5
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//call Screen.updateLocation 2
@OS.Screen.drawHorizontal$ret.606
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.updateLocation
0;JMP
(OS.Screen.drawHorizontal$ret.606)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END1
@OS.Screen.drawHorizontal$IF_END1
0;JMP
//label IF_FALSE1
(OS.Screen.drawHorizontal$IF_FALSE1)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 5
@5
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.updateLocation 2
@OS.Screen.drawHorizontal$ret.612
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.updateLocation
0;JMP
(OS.Screen.drawHorizontal$ret.612)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Screen.drawHorizontal$WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_621
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_621
0;JMP
(LESS_621)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_621)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Screen.drawHorizontal$WHILE_END0
D;JNE
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
M=M-1
A=M
D=M
D=-D
@SP
A=M
M=D
@SP
M=M+1
//call Screen.updateLocation 2
@OS.Screen.drawHorizontal$ret.627
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.updateLocation
0;JMP
(OS.Screen.drawHorizontal$ret.627)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP0
@OS.Screen.drawHorizontal$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Screen.drawHorizontal$WHILE_END0)
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 4
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.updateLocation 2
@OS.Screen.drawHorizontal$ret.637
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.updateLocation
0;JMP
(OS.Screen.drawHorizontal$ret.637)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END1
(OS.Screen.drawHorizontal$IF_END1)
//label IF_FALSE0
(OS.Screen.drawHorizontal$IF_FALSE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Screen.drawSymetric 0
(OS.Screen.drawSymetric)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawHorizontal 3
@OS.Screen.drawSymetric$ret.653
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@8
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawHorizontal
0;JMP
(OS.Screen.drawSymetric$ret.653)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawHorizontal 3
@OS.Screen.drawSymetric$ret.664
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@8
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawHorizontal
0;JMP
(OS.Screen.drawSymetric$ret.664)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawHorizontal 3
@OS.Screen.drawSymetric$ret.675
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@8
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawHorizontal
0;JMP
(OS.Screen.drawSymetric$ret.675)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 3
@3
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawHorizontal 3
@OS.Screen.drawSymetric$ret.686
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@8
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawHorizontal
0;JMP
(OS.Screen.drawSymetric$ret.686)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Screen.drawCircle 3
(OS.Screen.drawCircle)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_693
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_693
0;JMP
(LESS_693)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_693)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 511
@511
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_696
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_696
0;JMP
(GREATER_696)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_696)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_700
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_700
0;JMP
(LESS_700)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_700)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 255
@255
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_704
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_704
0;JMP
(GREATER_704)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_704)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Screen.drawCircle$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Screen.drawCircle$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Screen.drawCircle$IF_TRUE0)
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.Screen.drawCircle$ret.710
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.Screen.drawCircle$ret.710)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Screen.drawCircle$IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_717
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_717
0;JMP
(LESS_717)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_717)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 511
@511
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_722
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_722
0;JMP
(GREATER_722)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_722)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_728
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_728
0;JMP
(LESS_728)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_728)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 255
@255
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_734
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_734
0;JMP
(GREATER_734)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_734)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Screen.drawCircle$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Screen.drawCircle$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Screen.drawCircle$IF_TRUE1)
//push constant 13
@13
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.Screen.drawCircle$ret.740
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.Screen.drawCircle$ret.740)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE1
(OS.Screen.drawCircle$IF_FALSE1)
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawSymetric 4
@OS.Screen.drawCircle$ret.753
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@9
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawSymetric
0;JMP
(OS.Screen.drawCircle$ret.753)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Screen.drawCircle$WHILE_EXP0)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_758
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_758
0;JMP
(GREATER_758)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_758)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Screen.drawCircle$WHILE_END0
D;JNE
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_763
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_763
0;JMP
(LESS_763)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_763)
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M
@OS.Screen.drawCircle$IF_TRUE2
D;JNE
//goto IF_FALSE2
@OS.Screen.drawCircle$IF_FALSE2
0;JMP
//label IF_TRUE2
(OS.Screen.drawCircle$IF_TRUE2)
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Screen.drawCircle$ret.770
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Screen.drawCircle$ret.770)
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END2
@OS.Screen.drawCircle$IF_END2
0;JMP
//label IF_FALSE2
(OS.Screen.drawCircle$IF_FALSE2)
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.Screen.drawCircle$ret.782
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.Screen.drawCircle$ret.782)
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END2
(OS.Screen.drawCircle$IF_END2)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawSymetric 4
@OS.Screen.drawCircle$ret.800
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@9
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawSymetric
0;JMP
(OS.Screen.drawCircle$ret.800)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP0
@OS.Screen.drawCircle$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Screen.drawCircle$WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Sys.init 0
(OS.Sys.init)
//call Memory.init 0
@OS.Sys.init$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Memory.init
0;JMP
(OS.Sys.init$ret.1)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//call Math.init 0
@OS.Sys.init$ret.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.init
0;JMP
(OS.Sys.init$ret.3)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//call Screen.init 0
@OS.Sys.init$ret.5
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.init
0;JMP
(OS.Sys.init$ret.5)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//call Output.init 0
@OS.Sys.init$ret.7
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.init
0;JMP
(OS.Sys.init$ret.7)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//call Keyboard.init 0
@OS.Sys.init$ret.9
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Keyboard.init
0;JMP
(OS.Sys.init$ret.9)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//call Main.main 0
@OS.Sys.init$ret.11
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Main.main
0;JMP
(OS.Sys.init$ret.11)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//call Sys.halt 0
@OS.Sys.init$ret.13
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.halt
0;JMP
(OS.Sys.init$ret.13)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Sys.halt 0
(OS.Sys.halt)
//label WHILE_EXP0
(OS.Sys.halt$WHILE_EXP0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Sys.halt$WHILE_END0
D;JNE
//goto WHILE_EXP0
@OS.Sys.halt$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Sys.halt$WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Sys.wait 1
(OS.Sys.wait)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_30
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_30
0;JMP
(LESS_30)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_30)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Sys.wait$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Sys.wait$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Sys.wait$IF_TRUE0)
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.Sys.wait$ret.35
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.Sys.wait$ret.35)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Sys.wait$IF_FALSE0)
//label WHILE_EXP0
(OS.Sys.wait$WHILE_EXP0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_41
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_41
0;JMP
(GREATER_41)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_41)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Sys.wait$WHILE_END0
D;JNE
//push constant 50
@50
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP1
(OS.Sys.wait$WHILE_EXP1)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_49
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_49
0;JMP
(GREATER_49)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_49)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END1
@SP
M=M-1
A=M
D=M
@OS.Sys.wait$WHILE_END1
D;JNE
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP1
@OS.Sys.wait$WHILE_EXP1
0;JMP
//label WHILE_END1
(OS.Sys.wait$WHILE_END1)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop argument 0
@0
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP0
@OS.Sys.wait$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Sys.wait$WHILE_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Sys.error 0
(OS.Sys.error)
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.new 1
@OS.Sys.error$ret.68
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.new
0;JMP
(OS.Sys.error$ret.68)
//push constant 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Sys.error$ret.70
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Sys.error$ret.70)
//push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Sys.error$ret.72
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Sys.error$ret.72)
//push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//call String.appendChar 2
@OS.Sys.error$ret.74
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.String.appendChar
0;JMP
(OS.Sys.error$ret.74)
//call Output.printString 1
@OS.Sys.error$ret.75
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.printString
0;JMP
(OS.Sys.error$ret.75)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Output.printInt 1
@OS.Sys.error$ret.78
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Output.printInt
0;JMP
(OS.Sys.error$ret.78)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//call Sys.halt 0
@OS.Sys.error$ret.80
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.halt
0;JMP
(OS.Sys.error$ret.80)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Memory.init 0
(OS.Memory.init)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@Memory.0
D=A
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 2048
@2048
D=A
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Memory.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 14334
@14334
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 2049
@2049
D=A
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Memory.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2050
@2050
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Memory.peek 0
(OS.Memory.peek)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Memory.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Memory.poke 0
(OS.Memory.poke)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 0
@Memory.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Memory.alloc 1
(OS.Memory.alloc)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_42
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_42
0;JMP
(LESS_42)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_42)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Memory.alloc$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Memory.alloc$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Memory.alloc$IF_TRUE0)
//push constant 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.Memory.alloc$ret.47
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.Memory.alloc$ret.47)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Memory.alloc$IF_FALSE0)
//push constant 2048
@2048
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.Memory.alloc$WHILE_EXP0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_59
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_59
0;JMP
(LESS_59)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_59)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.Memory.alloc$WHILE_END0
D;JNE
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP0
@OS.Memory.alloc$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.Memory.alloc$WHILE_END0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 16379
@16379
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_74
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_74
0;JMP
(GREATER_74)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_74)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Memory.alloc$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Memory.alloc$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Memory.alloc$IF_TRUE1)
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.Memory.alloc$ret.79
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.Memory.alloc$ret.79)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE1
(OS.Memory.alloc$IF_FALSE1)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_90
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_90
0;JMP
(GREATER_90)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_90)
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M
@OS.Memory.alloc$IF_TRUE2
D;JNE
//goto IF_FALSE2
@OS.Memory.alloc$IF_FALSE2
0;JMP
//label IF_TRUE2
(OS.Memory.alloc$IF_TRUE2)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_120
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_120
0;JMP
(EQUAL_120)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_120)
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M
@OS.Memory.alloc$IF_TRUE3
D;JNE
//goto IF_FALSE3
@OS.Memory.alloc$IF_FALSE3
0;JMP
//label IF_TRUE3
(OS.Memory.alloc$IF_TRUE3)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END3
@OS.Memory.alloc$IF_END3
0;JMP
//label IF_FALSE3
(OS.Memory.alloc$IF_FALSE3)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END3
(OS.Memory.alloc$IF_END3)
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE2
(OS.Memory.alloc$IF_FALSE2)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Memory.deAlloc 2
(OS.Memory.deAlloc)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_197
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_197
0;JMP
(EQUAL_197)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_197)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Memory.deAlloc$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Memory.deAlloc$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Memory.deAlloc$IF_TRUE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END0
@OS.Memory.deAlloc$IF_END0
0;JMP
//label IF_FALSE0
(OS.Memory.deAlloc$IF_FALSE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_247
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_247
0;JMP
(EQUAL_247)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_247)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.Memory.deAlloc$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.Memory.deAlloc$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.Memory.deAlloc$IF_TRUE1)
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END1
@OS.Memory.deAlloc$IF_END1
0;JMP
//label IF_FALSE1
(OS.Memory.deAlloc$IF_FALSE1)
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END1
(OS.Memory.deAlloc$IF_END1)
//label IF_END0
(OS.Memory.deAlloc$IF_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Square.new 0
(OS.Square.new)
//push constant 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Memory.alloc 1
@OS.Square.new$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Memory.alloc
0;JMP
(OS.Square.new$ret.2)
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop this 2
@2
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop this 0
@0
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop this 1
@1
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop this 3
@3
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.draw 1
@OS.Square.new$ret.13
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.draw
0;JMP
(OS.Square.new$ret.13)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Square.dispose 0
(OS.Square.dispose)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Memory.deAlloc 1
@OS.Square.dispose$ret.21
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Memory.deAlloc
0;JMP
(OS.Square.dispose$ret.21)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Square.draw 0
(OS.Square.draw)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//call Screen.setColor 1
@OS.Square.draw$ret.30
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.setColor
0;JMP
(OS.Square.draw$ret.30)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawRectangle 4
@OS.Square.draw$ret.40
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@9
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawRectangle
0;JMP
(OS.Square.draw$ret.40)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Square.erase 0
(OS.Square.erase)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Screen.setColor 1
@OS.Square.erase$ret.48
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.setColor
0;JMP
(OS.Square.erase$ret.48)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawRectangle 4
@OS.Square.erase$ret.58
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@9
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawRectangle
0;JMP
(OS.Square.erase$ret.58)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Square.getX 0
(OS.Square.getX)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Square.getY 0
(OS.Square.getY)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Square.Restart 0
(OS.Square.Restart)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.erase 1
@OS.Square.Restart$ret.76
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.erase
0;JMP
(OS.Square.Restart$ret.76)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop this 0
@0
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Square.moveUp 0
(OS.Square.moveUp)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 4
@4
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_89
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_89
0;JMP
(GREATER_89)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_89)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Square.moveUp$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Square.moveUp$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Square.moveUp$IF_TRUE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Screen.setColor 1
@OS.Square.moveUp$ret.94
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.setColor
0;JMP
(OS.Square.moveUp$ret.94)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawRectangle 4
@OS.Square.moveUp$ret.104
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@9
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawRectangle
0;JMP
(OS.Square.moveUp$ret.104)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 4
@4
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop this 1
@1
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//call Screen.setColor 1
@OS.Square.moveUp$ret.112
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.setColor
0;JMP
(OS.Square.moveUp$ret.112)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawRectangle 4
@OS.Square.moveUp$ret.122
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@9
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawRectangle
0;JMP
(OS.Square.moveUp$ret.122)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Square.moveUp$IF_FALSE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Square.moveDown 0
(OS.Square.moveDown)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 254
@254
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_134
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_134
0;JMP
(LESS_134)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_134)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Square.moveDown$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Square.moveDown$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Square.moveDown$IF_TRUE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Screen.setColor 1
@OS.Square.moveDown$ret.139
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.setColor
0;JMP
(OS.Square.moveDown$ret.139)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawRectangle 4
@OS.Square.moveDown$ret.149
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@9
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawRectangle
0;JMP
(OS.Square.moveDown$ret.149)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop this 1
@1
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//call Screen.setColor 1
@OS.Square.moveDown$ret.157
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.setColor
0;JMP
(OS.Square.moveDown$ret.157)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawRectangle 4
@OS.Square.moveDown$ret.171
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@9
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawRectangle
0;JMP
(OS.Square.moveDown$ret.171)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Square.moveDown$IF_FALSE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Square.moveLeft 0
(OS.Square.moveLeft)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_181
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_181
0;JMP
(GREATER_181)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_181)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Square.moveLeft$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Square.moveLeft$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Square.moveLeft$IF_TRUE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Screen.setColor 1
@OS.Square.moveLeft$ret.186
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.setColor
0;JMP
(OS.Square.moveLeft$ret.186)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawRectangle 4
@OS.Square.moveLeft$ret.200
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@9
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawRectangle
0;JMP
(OS.Square.moveLeft$ret.200)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop this 0
@0
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//call Screen.setColor 1
@OS.Square.moveLeft$ret.208
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.setColor
0;JMP
(OS.Square.moveLeft$ret.208)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 3
@3
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//call Screen.drawRectangle 4
@OS.Square.moveLeft$ret.218
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@9
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Screen.drawRectangle
0;JMP
(OS.Square.moveLeft$ret.218)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END0
@OS.Square.moveLeft$IF_END0
0;JMP
//label IF_FALSE0
(OS.Square.moveLeft$IF_FALSE0)
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Square.Restart 1
@OS.Square.moveLeft$ret.223
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Square.Restart
0;JMP
(OS.Square.moveLeft$ret.223)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_END0
(OS.Square.moveLeft$IF_END0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function String.new 0
(OS.String.new)
//push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Memory.alloc 1
@OS.String.new$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Memory.alloc
0;JMP
(OS.String.new$ret.2)
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_6
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_6
0;JMP
(LESS_6)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_6)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.String.new$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.String.new$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.String.new$IF_TRUE0)
//push constant 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.String.new$ret.11
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.String.new$ret.11)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.String.new$IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_16
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_16
0;JMP
(GREATER_16)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_16)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.String.new$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.String.new$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.String.new$IF_TRUE1)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@OS.String.new$ret.21
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Array.new
0;JMP
(OS.String.new$ret.21)
//pop this 1
@1
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE1
(OS.String.new$IF_FALSE1)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop this 0
@0
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 2
@2
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function String.dispose 0
(OS.String.dispose)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_35
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_35
0;JMP
(GREATER_35)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_35)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.String.dispose$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.String.dispose$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.String.dispose$IF_TRUE0)
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Array.dispose 1
@OS.String.dispose$ret.40
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Array.dispose
0;JMP
(OS.String.dispose$ret.40)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.String.dispose$IF_FALSE0)
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Memory.deAlloc 1
@OS.String.dispose$ret.44
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Memory.deAlloc
0;JMP
(OS.String.dispose$ret.44)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function String.length 0
(OS.String.length)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function String.charAt 0
(OS.String.charAt)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_58
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_58
0;JMP
(LESS_58)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_58)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_61
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_61
0;JMP
(GREATER_61)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_61)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_65
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_65
0;JMP
(EQUAL_65)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_65)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.String.charAt$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.String.charAt$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.String.charAt$IF_TRUE0)
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.String.charAt$ret.71
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.String.charAt$ret.71)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.String.charAt$IF_FALSE0)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function String.setCharAt 0
(OS.String.setCharAt)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_85
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_85
0;JMP
(LESS_85)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_85)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_88
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_88
0;JMP
(GREATER_88)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_88)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_92
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_92
0;JMP
(EQUAL_92)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_92)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.String.setCharAt$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.String.setCharAt$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.String.setCharAt$IF_TRUE0)
//push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.String.setCharAt$ret.98
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.String.setCharAt$ret.98)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.String.setCharAt$IF_FALSE0)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 2
@2
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function String.appendChar 0
(OS.String.appendChar)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_116
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_116
0;JMP
(EQUAL_116)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_116)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.String.appendChar$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.String.appendChar$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.String.appendChar$IF_TRUE0)
//push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.String.appendChar$ret.121
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.String.appendChar$ret.121)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.String.appendChar$IF_FALSE0)
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop this 2
@2
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function String.eraseLastChar 0
(OS.String.eraseLastChar)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_143
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_143
0;JMP
(EQUAL_143)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_143)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.String.eraseLastChar$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.String.eraseLastChar$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.String.eraseLastChar$IF_TRUE0)
//push constant 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.String.eraseLastChar$ret.148
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.String.eraseLastChar$ret.148)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.String.eraseLastChar$IF_FALSE0)
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop this 2
@2
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function String.intValue 5
(OS.String.intValue)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_162
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_162
0;JMP
(EQUAL_162)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_162)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.String.intValue$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.String.intValue$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.String.intValue$IF_TRUE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//label IF_FALSE0
(OS.String.intValue$IF_FALSE0)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 45
@45
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_178
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_178
0;JMP
(EQUAL_178)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_178)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.String.intValue$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.String.intValue$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.String.intValue$IF_TRUE1)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop local 4
@4
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE1
(OS.String.intValue$IF_FALSE1)
//label WHILE_EXP0
(OS.String.intValue$WHILE_EXP0)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_191
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_191
0;JMP
(LESS_191)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_191)
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//and
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.String.intValue$WHILE_END0
D;JNE
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_206
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_206
0;JMP
(LESS_206)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_206)
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_209
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_209
0;JMP
(GREATER_209)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_209)
//or
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M
@OS.String.intValue$IF_TRUE2
D;JNE
//goto IF_FALSE2
@OS.String.intValue$IF_FALSE2
0;JMP
//label IF_TRUE2
(OS.String.intValue$IF_TRUE2)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.String.intValue$ret.219
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.String.intValue$ret.219)
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE2
(OS.String.intValue$IF_FALSE2)
//goto WHILE_EXP0
@OS.String.intValue$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.String.intValue$WHILE_END0)
//push local 4
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M
@OS.String.intValue$IF_TRUE3
D;JNE
//goto IF_FALSE3
@OS.String.intValue$IF_FALSE3
0;JMP
//label IF_TRUE3
(OS.String.intValue$IF_TRUE3)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
M=M-1
A=M
D=M
D=-D
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE3
(OS.String.intValue$IF_FALSE3)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function String.setInt 4
(OS.String.setInt)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_245
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_245
0;JMP
(EQUAL_245)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_245)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.String.setInt$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.String.setInt$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.String.setInt$IF_TRUE0)
//push constant 19
@19
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.String.setInt$ret.250
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.String.setInt$ret.250)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.String.setInt$IF_FALSE0)
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Array.new 1
@OS.String.setInt$ret.254
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Array.new
0;JMP
(OS.String.setInt$ret.254)
//pop local 2
@2
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_258
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_258
0;JMP
(LESS_258)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_258)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@OS.String.setInt$IF_TRUE1
D;JNE
//goto IF_FALSE1
@OS.String.setInt$IF_FALSE1
0;JMP
//label IF_TRUE1
(OS.String.setInt$IF_TRUE1)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//pop local 3
@3
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
M=M-1
A=M
D=M
D=-D
@SP
A=M
M=D
@SP
M=M+1
//pop argument 1
@1
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE1
(OS.String.setInt$IF_FALSE1)
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP0
(OS.String.setInt$WHILE_EXP0)
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_274
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_274
0;JMP
(GREATER_274)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_274)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@OS.String.setInt$WHILE_END0
D;JNE
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.divide 2
@OS.String.setInt$ret.279
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.divide
0;JMP
(OS.String.setInt$ret.279)
//pop local 1
@1
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Math.multiply 2
@OS.String.setInt$ret.288
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Math.multiply
0;JMP
(OS.String.setInt$ret.288)
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop argument 1
@1
D=A
@ARG
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP0
@OS.String.setInt$WHILE_EXP0
0;JMP
//label WHILE_END0
(OS.String.setInt$WHILE_END0)
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M
@OS.String.setInt$IF_TRUE2
D;JNE
//goto IF_FALSE2
@OS.String.setInt$IF_FALSE2
0;JMP
//label IF_TRUE2
(OS.String.setInt$IF_TRUE2)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 45
@45
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop local 0
@0
D=A
@LCL
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE2
(OS.String.setInt$IF_FALSE2)
//push this 0
@0
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_322
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_322
0;JMP
(LESS_322)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_322)
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M
@OS.String.setInt$IF_TRUE3
D;JNE
//goto IF_FALSE3
@OS.String.setInt$IF_FALSE3
0;JMP
//label IF_TRUE3
(OS.String.setInt$IF_TRUE3)
//push constant 19
@19
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.String.setInt$ret.327
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.String.setInt$ret.327)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE3
(OS.String.setInt$IF_FALSE3)
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@EQUAL_332
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@SKIP_332
0;JMP
(EQUAL_332)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_332)
//if-goto IF_TRUE4
@SP
M=M-1
A=M
D=M
@OS.String.setInt$IF_TRUE4
D;JNE
//goto IF_FALSE4
@OS.String.setInt$IF_FALSE4
0;JMP
//label IF_TRUE4
(OS.String.setInt$IF_TRUE4)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push constant 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 2
@2
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto IF_END4
@OS.String.setInt$IF_END4
0;JMP
//label IF_FALSE4
(OS.String.setInt$IF_FALSE4)
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//pop this 2
@2
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label WHILE_EXP1
(OS.String.setInt$WHILE_EXP1)
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@LESS_353
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_353
0;JMP
(LESS_353)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_353)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto WHILE_END1
@SP
M=M-1
A=M
D=M
@OS.String.setInt$WHILE_END1
D;JNE
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 1
@1
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push that 0
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//pop pointer 1
@1
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push temp 0
@0
D=A
@R5
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop that 0
@0
D=A
@THAT
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push this 2
@2
D=A
@THIS
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//pop this 2
@2
D=A
@THIS
D=M+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//goto WHILE_EXP1
@OS.String.setInt$WHILE_EXP1
0;JMP
//label WHILE_END1
(OS.String.setInt$WHILE_END1)
//label IF_END4
(OS.String.setInt$IF_END4)
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Array.dispose 1
@OS.String.setInt$ret.380
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Array.dispose
0;JMP
(OS.String.setInt$ret.380)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function String.newLine 0
(OS.String.newLine)
//push constant 128
@128
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function String.backSpace 0
(OS.String.backSpace)
//push constant 129
@129
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function String.doubleQuote 0
(OS.String.doubleQuote)
//push constant 34
@34
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Array.new 0
(OS.Array.new)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@GREATER_3
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@SKIP_3
0;JMP
(GREATER_3)
@SP
A=M
M=-1
@SP
M=M+1
(SKIP_3)
//not
@SP
M=M-1
A=M
D=M
D=!D
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@OS.Array.new$IF_TRUE0
D;JNE
//goto IF_FALSE0
@OS.Array.new$IF_FALSE0
0;JMP
//label IF_TRUE0
(OS.Array.new$IF_TRUE0)
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.error 1
@OS.Array.new$ret.9
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Sys.error
0;JMP
(OS.Array.new$ret.9)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//label IF_FALSE0
(OS.Array.new$IF_FALSE0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Memory.alloc 1
@OS.Array.new$ret.13
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Memory.alloc
0;JMP
(OS.Array.new$ret.13)
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Array.dispose 0
(OS.Array.dispose)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop pointer 0
@0
D=A
@THIS
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push pointer 0
@0
D=A
@THIS
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//call Memory.deAlloc 1
@OS.Array.dispose$ret.19
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@OS.Memory.deAlloc
0;JMP
(OS.Array.dispose$ret.19)
//pop temp 0
@0
D=A
@R5
D=A+D
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
