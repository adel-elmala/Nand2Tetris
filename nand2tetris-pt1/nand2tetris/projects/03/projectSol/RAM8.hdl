// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    // DMux8Way(in=in, sel= address, a=rIn0, b=rIn1, c=rIn2, d=rIn3, e=rIn4, f=rIn5, g=rIn6, h=rIn7); /* Fan out the RAM in pin to the 8 Registers */
    
    DMux8Way(in=load, sel=address, a=rLoad0, b=rLoad1, c=rLoad2, d=rLoad3, e=rLoad4, f=rLoad5, g=rLoad6, h=rLoad7);
    Mux8Way16(a=rOut0, b=rOut1, c=rOut2, d=rOut3, e=rOut4, f=rOut5, g=rOut6, h=rOut7, sel=address, out=out);
    
    Register(in=in, load=rLoad0, out=rOut0); /* REGISTER 0 */
    Register(in=in, load=rLoad1, out=rOut1); /* REGISTER 1 */
    Register(in=in, load=rLoad2, out=rOut2); /* REGISTER 2 */
    Register(in=in, load=rLoad3, out=rOut3); /* REGISTER 3 */
    Register(in=in, load=rLoad4, out=rOut4); /* REGISTER 4 */
    Register(in=in, load=rLoad5, out=rOut5); /* REGISTER 5 */
    Register(in=in, load=rLoad6, out=rOut6); /* REGISTER 7 */
    Register(in=in, load=rLoad7, out=rOut7); /* REGISTER 6 */




}