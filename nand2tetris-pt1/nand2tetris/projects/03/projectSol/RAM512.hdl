// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[6..8], a=RLoad0, b=RLoad1, c=RLoad2, d=RLoad3, e=RLoad4, f=RLoad5, g=RLoad6, h=RLoad7);
    Mux8Way16(a=ROut0, b=ROut1, c=ROut2, d=ROut3, e=ROut4, f=ROut5, g=ROut6, h=ROut7, sel=address[6..8], out=out);
    RAM64(in=in, load=RLoad0, address=address[0..5], out=ROut0); /* RAM 0 */
    RAM64(in=in, load=RLoad1, address=address[0..5], out=ROut1); /* RAM 1 */
    RAM64(in=in, load=RLoad2, address=address[0..5], out=ROut2); /* RAM 2 */
    RAM64(in=in, load=RLoad3, address=address[0..5], out=ROut3); /* RAM 3 */
    RAM64(in=in, load=RLoad4, address=address[0..5], out=ROut4); /* RAM 4 */
    RAM64(in=in, load=RLoad5, address=address[0..5], out=ROut5); /* RAM 5 */
    RAM64(in=in, load=RLoad6, address=address[0..5], out=ROut6); /* RAM 6 */
    RAM64(in=in, load=RLoad7, address=address[0..5], out=ROut7); /* RAM 7 */

}